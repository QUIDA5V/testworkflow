name: First workflow

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose environment"
        required: true
        default: dev
        type: choice
        options:
          - dev
          - prod
  #    tag:
  #      description: "Enter tag name"
  #      required: false
  #      default: v1

#env:
#  GLOBAL_ENV: ""
#  GLOBAL_BRANCH: ""
#  TYPE: ""

jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      branchName: ${{ steps.set-branch.outputs.branchName }}
      envName: ${{ steps.set-branch.outputs.envName }}

    steps:
      - id: set-branch
        run: echo "branchName=${{ github.ref_name }}" >> $GITHUB_OUTPUT
      - id: set-env
        if: github.event_name == 'workflow_dispatch'
        run: echo "envName=${{ inputs.environment }}" >> $GITHUB_OUTPUT
        if: github.event_name != 'workflow_dispatch'
        run: echo "envName=${{  github.ref_name == 'main' && 'prod' || github.ref_name == 'dev' && 'dev' || 'staging' }}" >> $GITHUB_OUTPUT

  job-one:
    runs-on: ubuntu-latest
    needs: set-vars
    env:
      GLOBAL_ENV: ${{ needs.set-vars.outputs.envName }}
      GLOBAL_BRANCH: ${{ needs.set-vars.outputs.branchName }}
    steps:
      - name: Print global env in job one
        run: echo "Job One is running on $GLOBAL_ENV"

  test:
    runs-on: ubuntu-latest
    # Choose environment dynamically based on the branch
    environment: |-
      ${{  github.ref_name == 'main' && 'prod' || github.ref_name == 'dev' && 'dev' || 'staging' }}

    steps:
      - name: Set branch name
        run: echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Run only on manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: echo "GLOBAL_ENV=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "This was a manual run."

      - name: Show selected environment
        run: echo "Deploying to ${{ inputs.environment }} environment"
          echo "Environment name is ${{ env.GLOBAL_ENV }}"
          echo "Branch name is ${{ env.BRANCH_NAME }}"

      - name: Use environment variables
        run: |
          echo "Running on branch: ${GITHUB_REF##*/}"
          echo "Environment: ${{ job.environment }}"
          echo "Secret in use: ${{secrets.ACTIVE_SECRET}}"
          echo "Secret in use: ${{secrets.OTHER_SECRET}}"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate tag on branch
        run: |
          git fetch --tags
          echo "Looking for tag ${{ github.event.inputs.tag }} on branch ${{ github.event.inputs.branch }}"
        ## if git branch --contains "${{ github.event.inputs.tag }}" | grep "${{ github.event.inputs.branch }}"; then
        ##   echo "Tag is valid."
        ## else
        ##   echo "‚ùå Tag not associated with branch."
        ##   exit 1
        ## fi

      - name: Fetch tags
        run: git fetch --tags

      #- name: Checkout tag
      #  run: git checkout ${{ github.event.inputs.tag }}

      - name: Confirm tag
        run: git describe --tags --always

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Say Hello
        run: echo "Hello from GitHub Actions üöÄ"

      - name: Run Tests
        run: mvn test
        ##working-directory: pic

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Show selected environment
        run: echo "Deploying to ${{ inputs.environment }} environment"
          echo "Environment name is ${{ env.GLOBAL_ENV }}"
          echo "Branch name is ${{ env.BRANCH_NAME }}"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Say Hello
        run: echo "Hello from GitHub Actions üöÄ"

      - name: Build Project
        run: mvn clean package -DskipTests=true
        ##working-directory: pic

  build-push-docker-images:
    runs-on: ubuntu-latest
    needs: build

    environment: |-
      ${{  github.ref_name == 'main' && 'prod' || github.ref_name == 'dev' && 'dev' || 'staging' }}

    steps:
      - name: Show selected environment
        run: echo "Deploying to ${{ inputs.environment }} environment"

      - name: Use environment variables
        run: |
          echo "Running on branch: ${GITHUB_REF##*/}"

      - name: Checkout code
        uses: actions/checkout@v3

      #- name: Set up JDK 21
      #  uses: actions/setup-java@v3
      #  with:
      #    java-version: "21"
      #    distribution: "temurin"

      - name: Build Project
        run: mvn clean package -DskipTests=true

      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3
      - name: Say Username
        run: echo ${{ secrets.DOCKER_USERNAME }}

      - name: Say Pwds
        run: echo ${{ secrets.DOCKER_PASSWORD }}
