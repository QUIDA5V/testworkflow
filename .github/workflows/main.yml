name: First workflow

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose environment"
        required: true
        default: dev
        type: choice
        options:
          - dev
          - prod
  #    tag:
  #      description: "Enter tag name"
  #      required: false
  #      default: v1

jobs:
  test:
    runs-on: ubuntu-latest
    # Choose environment dynamically based on the branch
    environment: |-
      ${{  github.ref_name == 'main' && 'prod' || github.ref_name == 'dev' && 'dev' || 'staging' }}

    #environment:
    #  name: ${{ github.ref == 'refs/heads/main' && 'PROD' || 'development' }}

    steps:
      - name: Show selected environment
        run: echo "Deploying to ${{ inputs.environment }} environment"

      - name: Use environment variables
        run: |
          echo "Running on branch: ${GITHUB_REF##*/}"
          echo "Environment: ${{ job.environment }}"
          echo "Secret in use: ${{secrets.ACTIVE_SECRET}}"
          echo "Secret in use: ${{secrets.OTHER_SECRET}}"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate tag on branch
        run: |
          git fetch --tags
          echo "Looking for tag ${{ github.event.inputs.tag }} on branch ${{ github.event.inputs.branch }}"
        ## if git branch --contains "${{ github.event.inputs.tag }}" | grep "${{ github.event.inputs.branch }}"; then
        ##   echo "Tag is valid."
        ## else
        ##   echo "❌ Tag not associated with branch."
        ##   exit 1
        ## fi

      - name: Fetch tags
        run: git fetch --tags

      #- name: Checkout tag
      #  run: git checkout ${{ github.event.inputs.tag }}

      - name: Confirm tag
        run: git describe --tags --always

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Say Hello
        run: echo "Hello from GitHub Actions 🚀"

      - name: Run Tests
        run: mvn test
        ##working-directory: pic

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Say Hello
        run: echo "Hello from GitHub Actions 🚀"

      - name: Build Project
        run: mvn clean package -DskipTests=true
        ##working-directory: pic

  build-push-docker-images:
    runs-on: ubuntu-latest
    needs: build

    environment: |-
      ${{  github.ref_name == 'main' && 'prod' || github.ref_name == 'dev' && 'dev' || 'staging' }}

    steps:
      - name: Show selected environment
        run: echo "Deploying to ${{ inputs.environment }} environment"

      - name: Use environment variables
        run: |
          echo "Running on branch: ${GITHUB_REF##*/}"

      - name: Checkout code
        uses: actions/checkout@v3

      #- name: Set up JDK 21
      #  uses: actions/setup-java@v3
      #  with:
      #    java-version: "21"
      #    distribution: "temurin"

      - name: Build Project
        run: mvn clean package -DskipTests=true

      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3
      - name: Say Username
        run: echo ${{ secrets.DOCKER_USERNAME }}

      - name: Say Pwds
        run: echo ${{ secrets.DOCKER_PASSWORD }}

      - name: Google Cloud Auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.JSONKEY }}"
          project_id: "back-438814"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Configure Docker
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -t "us-central1-docker.pkg.dev/back-438814/dummytest":latest -f Dockerfile .
          docker push "us-central1-docker.pkg.dev/back-438814/dummytest":latest

      - name: Authenticate to GCP
        run: |
          echo "${{ secrets.JSONKEY }}" > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud config set project "back-438814"

      - name: create image and push to docker repo
        uses: ./.github/actions/dockerImage
        #uses: QUIDA5V/actions/docker@main
        with:
          gcp_sa_key: ${{ secrets.JSONKEY }}
          gcp_project_id: "back-438814"
          registry: "myrepository"
          image_name: "myimage"
          tag: "myfinaltag"
