name: "Update image to state-file"
description: "Update image to state-file"
inputs:
  image_tag_name:
    description: "image_tag_name"
    required: true
  image_name:
    description: "image_name"
    required: true
  environment:
    description: "environment"
    required: true
  gh_pat:
    description: "gh_pat"
    required: true

runs:
  using: "composite"
  steps:
    - name: Download artifacts (state files) todo
      uses: actions/download-artifact@v4
      with:
        name: environment-setup-artifact
        path: ./state-files

    - name: Clone state files repository todo
      shell: bash
      run: |
        git clone https://github.com/QUIDA5V/state-files-repo.git
        mv ./state-files/* ./state-files-repo

    - name: Update or create image tag in state files
      shell: bash
      run: |
        FILE="./state-files-repo/${{ inputs.environment }}/${{ inputs.image_name }}.json"

        # Si el archivo no existe, lo crea con estructura JSON bÃ¡sica
        if [ ! -f "$FILE" ]; then
           echo "Archivo no existe. Creando $FILE..."
           mkdir -p "$(dirname "$FILE")"
           echo '{ "imageTag": "${{ inputs.image_tag_name }}" }' > "$FILE"
        else
           echo "Archivo existe. Actualizando imageTag..."
        # Usa jq para modificar en caso de que sea una lista de objetos con campo imageTag
        jq --arg tag "${{ inputs.image_tag_name }}" 'map(.imageTag = $tag)' "$FILE" > tmp.json && mv tmp.json "$FILE"
        fi

    - name: Set up Git credentials todo
      shell: bash
      run: |
        git config --global user.email "dquinonezlib@gmail.com"
        git config --global user.name "QUIDA5V"

    - name: Commit and push changes todo
      shell: bash
      run: |
        cd ./state-files-repo
        git remote set-url origin https://x-access-token:${{ inputs.gh_pat }}@github.com/QUIDA5V/state-files-repo
        git add .
        git commit -m "Update image tag to test"
        git push origin HEAD
